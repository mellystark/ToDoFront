@model IEnumerable<ToDoFront.Models.TodoItemModel>

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <title>Todo List</title>
    <style>
        body {
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }

        .todo-list {
            margin-top: 20px;
        }

        .todo-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 10px;
            position: relative;
        }

            .todo-item.complete {
                text-decoration: line-through;
                background-color: #e9ecef;
            }

            .todo-item button {
                border: none;
                background: none;
                cursor: pointer;
            }

                .todo-item button:hover {
                    color: #007bff;
                }

        .complete-icon {
            font-size: 20px;
            color: #28a745;
            margin-left: 10px;
        }

        .incomplete-icon {
            font-size: 20px;
            color: #dc3545;
            margin-left: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Todo List</h1>
        <form id="todoForm">
            <div class="form-group">
                <label for="todoInput">Todo</label>
                <input id="todoInput" class="form-control" placeholder="Yeni bir todo girin..." />
            </div>
            <div class="form-group">
                <label for="isCompleteCheckbox">Tamamlandı</label>
                <input id="isCompleteCheckbox" type="checkbox" />
            </div>
            <button type="button" id="addTodoButton" class="btn btn-primary">Ekle</button>
        </form>
        <div class="todo-list" id="todoList">
            @foreach (var todo in Model)
            {
                <div class="todo-item @(todo.IsComplete ? "complete" : "")" data-id="@todo.Id">
                    <span>@todo.Name</span>
                    <button class="complete-button">
                        <i class="fa @(todo.IsComplete ? "fa-check complete-icon" : "fa-times incomplete-icon")"></i>
                    </button>
                    <button class="text-danger delete-button">&times;</button>
                </div>
            }
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>
    <script>
        document.getElementById('addTodoButton').addEventListener('click', function () {
            var todoInput = document.getElementById('todoInput');
            var isCompleteCheckbox = document.getElementById('isCompleteCheckbox');
            var todoList = document.getElementById('todoList');
            var todoText = todoInput.value.trim();

            if (todoText) {
                var todoItem = document.createElement('div');
                todoItem.className = 'todo-item';

                var todoTextSpan = document.createElement('span');
                todoTextSpan.textContent = todoText;

                var completeButton = document.createElement('button');
                completeButton.className = 'complete-button';
                completeButton.innerHTML = '<i class="fa fa-times incomplete-icon"></i>';
                completeButton.addEventListener('click', function () {
                    var isComplete = this.querySelector('i').classList.contains('incomplete-icon');
                    var todoItemElement = this.parentElement;

                    if (isComplete) {
                        todoItemElement.classList.add('complete');
                        this.querySelector('i').classList.remove('incomplete-icon');
                        this.querySelector('i').classList.add('complete-icon');
                        // AJAX call to update the todo status on the server
                        // updateTodoStatus(todoId, true);
                    } else {
                        todoItemElement.classList.remove('complete');
                        this.querySelector('i').classList.remove('complete-icon');
                        this.querySelector('i').classList.add('incomplete-icon');
                        // AJAX call to update the todo status on the server
                        // updateTodoStatus(todoId, false);
                    }
                });

                var deleteButton = document.createElement('button');
                deleteButton.className = 'text-danger delete-button';
                deleteButton.innerHTML = '&times;';
                deleteButton.addEventListener('click', function () {
                    todoList.removeChild(todoItem);
                    // AJAX call to delete the todo from the server
                    // deleteTodo(todoId);
                });

                todoItem.appendChild(todoTextSpan);
                todoItem.appendChild(completeButton);
                todoItem.appendChild(deleteButton);
                todoList.appendChild(todoItem);

                todoInput.value = '';
                isCompleteCheckbox.checked = false;
            }
        });

        // Function to update todo status on the server
        function updateTodoStatus(todoId, isComplete) {
            fetch('/Todo/UpdateStatus', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id: todoId, isComplete: isComplete })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        console.log('Status updated successfully');
                    } else {
                        console.error('Error updating status');
                    }
                });
        }

        // Function to delete todo from the server
        function deleteTodo(todoId) {
            fetch('/Todo/Delete', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id: todoId })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        console.log('Todo deleted successfully');
                    } else {
                        console.error('Error deleting todo');
                    }
                });
        }
    </script>
</body>
</html>
